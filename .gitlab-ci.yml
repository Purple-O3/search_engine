image: golang:latest

before_script:
  - export GOPROXY=https://goproxy.cn
  - go get golang.org/x/tools/cmd/goimports
#  - apt-get update && apt-get install -y curl 

stages:
  - test
  - build
  - integration-test
#  - deploy

format-job:
  stage: test
  tags:
    - golang
  services:
    - name: pikadb/pika:latest
  script:
    - goimports -d .
    - test -z "$(goimports -d .)"
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -short -race $(go list ./... | grep -v /vendor/)

build-job:
  stage: build
  tags:
    - golang
  script:
    - echo "Compiling the code..."
    - cd cmd
    - go build  -race -ldflags "-extldflags '-static'" -o search_engine  main.go
    - echo "Compile complete."
  artifacts:
    paths:
      - cmd
      - configs
      - data
      - test
  
integration-test-job:
  stage: integration-test
  services:
    - name: pikadb/pika:latest
  image:
    name: node:latest
  before_script:
    - npm install -g newman
  script:
    - mkdir -p /go/pkg/mod/github.com/yanyiwu/gojieba@v1.1.2/dict
    - cp ./data/jibadict/* /go/pkg/mod/github.com/yanyiwu/gojieba@v1.1.2/dict/
    - cd cmd
    - ./search_engine &
    - newman run ../test/searchEngine.json

#deploy-job:      # This job runs in the deploy stage.
#  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#  script:
#    - echo "Deploying application..."
#    - echo "Application successfully deployed."
